list.files()
library(readxl)
dat <- read_xlsx("Data MLR.xlsx")
dat <- as.data.frame(dat)
dat
nama_y = colnames(dat)[c(1)]
library(readxl)
dat <- read_xlsx("Data MLR.xlsx")
dat <- as.data.frame(dat)
dat
nama_y = colnames(dat)[c(1)]
library(ggplot2)
require("ggrepel")
nomor = c(1 : length(dat[,1]))
# Scatter plot by group
ggplot(dat, aes(x = Berat, y = Tinggi, color = Binatang)) +
geom_point() + geom_text_repel(aes(label = rownames(dat)),
size = 3.5)
data_proses <- dat
colnames(data_proses)[c(1)] = c("y")
data_proses[,1] = as.factor(data_proses[,1])
data_proses
library(nnet)
model_mlr <- multinom(y ~. , data = data_proses)
print(model_mlr)
names(model_mlr)
data_latihan <- data_proses[-c(1)]
data_latihan
prediksi_klasifikasi <- predict(model_mlr, data_latihan)
prediksi_klasifikasi
level_kategori = levels(as.factor(dat[,1]))
level_kategori
dframe_hasil <- data.frame(data_proses, dat[,1], prediksi_klasifikasi)
a = length(dframe_hasil)
b = a - 1
colnames(dframe_hasil)[c(b,a)] = c( paste0(nama_y, " (Aktual)")  ,     paste0(nama_y, " (Prediksi)")         )
dframe_hasil
Akurasi <- vector(mode = "character")
x = dframe_hasil[,a]
y = dframe_hasil[,b]
for(i in 1 : length(x)  )
{
if(  x[i] == y[i] )
{
Akurasi[i] = c("Tepat Klasifikasi")
}
if(  x[i] != y[i] )
{
Akurasi[i] = c("Tidak Tepat Klasifikasi")
}
}
dframe_hasil2 = data.frame(dframe_hasil, Akurasi)
colnames(dframe_hasil2)[c(b,a)] = c(  paste0(nama_y, " (Aktual)"), paste0(nama_y, " (Prediksi)")   )
dframe_hasil2
table(Akurasi)
shiny::runApp('C:/STATCAL')
shiny::runApp('C:/STATCAL')
shiny::runApp('D:/STATCAL VERSI ONLINE/STATCAL FOR IDX/aplikasi/myapp')
shiny::runApp('D:/STATCAL VERSI ONLINE/STATCAL FOR IDX/aplikasi/myapp')
runApp('D:/STATCAL VERSI ONLINE/STATCAL FOR IDX/aplikasi/myapp')
runApp('D:/STATCAL VERSI ONLINE/STATCAL FOR IDX/aplikasi/myapp')
runApp('D:/STATCAL VERSI ONLINE/STATCAL FOR IDX/aplikasi/myapp')
setwd("D:/STATCAL VERSI ONLINE/STATCAL FOR IDX/aplikasi")
shinylive::export(appdir = "myapp", destdir = "docs")
httpuv::runStaticServer("docs")
shinylive::export(appdir = "myapp", destdir = "docs")
httpuv::runStaticServer("docs")
runApp('myapp')
runApp('myapp')
runApp('myapp')
runApp('myapp')
runApp('myapp')
setwd("D:/STATCAL VERSI ONLINE/STATCAL FOR IDX/aplikasi")
shinylive::export(appdir = "myapp", destdir = "docs")
httpuv::runStaticServer("docs")
